class Sensor:
    comfort_temperature_range = (20, 24)  # Static variable for the comfort temperature range

    def __init__(self, sensor_id, sensor_type, current_reading):
        """
        Initializes the Sensor object with an ID, type, and current reading.
        
        :param sensor_id: Unique identifier for the sensor.
        :param sensor_type: Type of the sensor (e.g., temperature, light).
        :param current_reading: The latest reading from the sensor.
        """
        self.sensor_id = sensor_id
        self.sensor_type = sensor_type
        self.current_reading = current_reading
    
    def get_reading(self):
        """
        Returns the current sensor reading.
        
        :return: The current reading.
        """
        return self.current_reading
    
    def update_reading(self, new_reading):
        """
        Updates the current reading based on a new measurement.
        
        :param new_reading: The new measurement to update the current reading with.
        """
        self.current_reading = new_reading
    
    @staticmethod
    def get_average_temperature(sensors):
        """
        Calculates the average temperature from a list of temperature sensors.
        
        :param sensors: A list of Sensor objects.
        :return: The average temperature.
        :raises ValueError: If the input list does not contain only temperature sensors.
        """
        temperature_readings = []
        
        for sensor in sensors:
            if sensor.sensor_type == 'temperature':
                temperature_readings.append(sensor.get_reading())
            else:
                raise ValueError("Input list must contain only Temperature sensors")
        
        if not temperature_readings:
            raise ValueError("Input list must contain only Temperature sensors")
        
        return sum(temperature_readings) / len(temperature_readings)

# Example usage
try:
    # Create multiple Sensor objects
    hallway_sensor = Sensor(1, 'temperature', 22)
    office_sensor = Sensor(2, 'temperature', 23)
    kitchen_sensor = Sensor(3, 'temperature', 21)
    
    # List of sensors
    sensors = [hallway_sensor, office_sensor, kitchen_sensor]
    
    # Calculate the average temperature
    average_temp = Sensor.get_average_temperature(sensors)
    
    # Compare the average temperature to the comfort temperature range
    comfort_min, comfort_max = Sensor.comfort_temperature_range
    if average_temp < comfort_min:
        print("Temperature is low")
    elif average_temp > comfort_max:
        print("Temperature is high")
    else:
        print("Comfortable temperature")
    
except ValueError as e:
    print(e)
